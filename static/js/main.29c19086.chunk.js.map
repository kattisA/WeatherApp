{"version":3,"sources":["components/weather.js","components/weatherSituations.js","img/ian-dooley-balloons-unsplash.jpg","App.js","reportWebVitals.js","index.js"],"names":["cardStyle","display","transitionDuration","borderRadius","backgroundColor","opacity","WeatherCard","weatherData","Card","style","CardContent","Grid","container","direction","sx","justifyContent","xs","md","item","Typography","variant","component","temperature","paddingTop","Box","s","fontSize","m","fontStyle","p","alignItems","flexWrap","humidity","fill","paddingBottom","size","moment","format","weatherIcon","weatherSituation","precipitation","weatherSituations","value","meaning","precipitationCats","level","description","App","useState","lat","setLat","long","setLong","data","setData","getWeatherIcon","weatherSituationVal","mapWeatherData","precipitationLevel","timeSeries","parameters","find","name","values","pre","wea","Math","round","useEffect","fetchData","a","navigator","geolocation","getCurrentPosition","position","latitude","longitude","fetch","then","res","json","result","Object","entries","length","className","backgroundImage","background","approvedTime","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAUMA,EAAY,CACdC,QAAS,QACTC,mBAAoB,OACpBC,aAAc,GACdC,gBAAiB,UACjBC,QAAS,QAmDEC,EA/CK,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAF,OAEhB,cAACC,EAAA,EAAD,CAAMC,MAAOT,EAAb,SACI,cAACU,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,GAAI,CAACC,eAAgB,CAACC,GAAI,SAAUC,GAAI,kBAAxE,UACI,eAACN,EAAA,EAAD,CAAMO,MAAI,EAAV,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,qBAGA,eAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,UACKd,EAAYe,YADjB,YAGA,cAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKZ,MAAO,CAACc,WAAW,IAA3D,SACI,cAACC,EAAA,EAAD,CAAKC,EAAG,CACJC,SAAU,cACVC,EAAG,EACHC,UAAW,SACXC,EAAE,GAJN,SAMI,sBAAKpB,MAAO,CAAER,QAAS,OACnB6B,WAAY,SACZC,SAAU,QAFd,UAGI,6CAAiBxB,EAAYyB,SAA7B,QACA,cAAC,IAAD,CAAavB,MAAO,CAACwB,KAAM,UAAWC,cAAc,GAAIC,KAAM,eAK9E,eAACxB,EAAA,EAAD,CAAMO,MAAI,EAACJ,GAAI,CAACC,eAAgB,CAACC,GAAI,SAAUC,GAAI,UAAnD,UACI,eAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,UACKe,MAASC,OAAO,QADrB,KACgCD,MAASC,OAAO,SAEhD,cAAClB,EAAA,EAAD,UACMZ,EAAY+B,cAElB,cAACnB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,SACMd,EAAYgC,mBAElB,cAACpB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,SACMd,EAAYiC,2BC1DhCC,EAAoB,CAC1B,CAACC,MAAO,EAAGC,QAAQ,eACnB,CAACD,MAAO,EAAGC,QAAQ,sBACnB,CAACD,MAAO,EAAGC,QAAQ,yBACnB,CAACD,MAAO,EAAGC,QAAQ,mBACnB,CAACD,MAAO,EAAGC,QAAQ,gBACnB,CAACD,MAAO,EAAGC,QAAQ,cACnB,CAACD,MAAO,EAAGC,QAAQ,SACnB,CAACD,MAAO,EAAGC,QAAQ,wBACnB,CAACD,MAAO,EAAGC,QAAQ,2BACnB,CAACD,MAAO,GAAIC,QAAS,sBACrB,CAACD,MAAO,GAAIC,QAAS,gBACrB,CAACD,MAAO,GAAIC,QAAS,uBACrB,CAACD,MAAO,GAAIC,QAAS,0BACrB,CAACD,MAAO,GAAIC,QAAS,uBACrB,CAACD,MAAO,GAAIC,QAAS,sBACrB,CAACD,MAAO,GAAIC,QAAS,yBACrB,CAACD,MAAO,GAAIC,QAAS,sBACrB,CAACD,MAAO,GAAIC,QAAS,cACrB,CAACD,MAAO,GAAIC,QAAS,iBACrB,CAACD,MAAO,GAAIC,QAAS,cACrB,CAACD,MAAO,GAAIC,QAAS,WACrB,CAACD,MAAO,GAAIC,QAAS,eACrB,CAACD,MAAO,GAAIC,QAAS,kBACrB,CAACD,MAAO,GAAIC,QAAS,eACrB,CAACD,MAAO,GAAIC,QAAS,kBACrB,CAACD,MAAO,GAAIC,QAAS,qBACrB,CAACD,MAAO,GAAIC,QAAS,mBC3BN,UAA0B,yDC4BnCC,EAAoB,CACtB,CAACC,MAAO,EAAGC,YAAa,oBACxB,CAACD,MAAO,EAAGC,YAAa,QACxB,CAACD,MAAO,EAAGC,YAAa,iBACxB,CAACD,MAAO,EAAGC,YAAa,QACxB,CAACD,MAAO,EAAGC,YAAa,WACxB,CAACD,MAAO,EAAGC,YAAa,iBACxB,CAACD,MAAO,EAAGC,YAAa,qBAGtBL,EFPKA,EEWI,SAASM,IAEpB,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KA0BA,SAASC,EAAeC,GAEpB,OAAQA,GACJ,KAAK,EACD,OAAO,cAAC,IAAD,CAAY/C,MAAO,CAACwB,KAAM,WAAaE,KAAM,MACxD,KAAK,EACD,OAAO,cAAC,IAAD,CAAoB1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MAC/D,KAAK,EACD,OAAO,cAAC,IAAD,CAAiB1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MAC5D,KAAK,EACD,OAAO,cAAC,IAAD,CAAc1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MACzD,KAAK,EACD,OAAO,cAAC,IAAD,CAAS1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MACpD,KAAK,EACD,OAAO,cAAC,IAAD,CAAU1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MACrD,KAAK,EACD,OAAO,cAAC,IAAD,CAAO1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MAClD,KAAK,EACL,KAAK,EACD,OAAO,cAAC,IAAD,CAAW1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MACtD,KAAK,GAcL,KAAK,GACL,KAAK,GACD,OAAO,cAAC,IAAD,CAAQ1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MAdnD,KAAK,GAeL,KAAK,GACD,OAAO,cAAC,IAAD,CAAgB1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MAd3D,KAAK,GACL,KAAK,GACL,KAAK,GAaL,KAAK,GACL,KAAK,GACL,KAAK,GACD,OAAO,cAAC,IAAD,CAAS1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MAdpD,KAAK,GACL,KAAK,GACL,KAAK,GACD,OAAO,cAAC,IAAD,CAAY1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MACvD,KAAK,GACD,OAAO,cAAC,IAAD,CAAW1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,MAUtD,KAAK,GACL,KAAK,GACL,KAAK,GACD,OAAO,cAAC,IAAD,CAAQ1B,MAAO,CAACwB,KAAM,WAAYE,KAAM,OAI3D,SAASsB,EAAeJ,GACpB,IAAIK,EAAqBL,EAAKM,WAAW,GAAGC,WAAWC,MAAK,SAAChC,GAAD,MAAgB,SAATA,EAAEiC,QAAeC,OAAO,GACrFvB,EAAgBI,EAAkBiB,MAAK,SAAAG,GAAG,OAAIA,EAAInB,QAAUa,KAC9DF,EAAsBH,EAAKM,WAAW,GAAGC,WAAWC,MAAK,SAAChC,GAAD,MAAiB,WAAVA,EAAEiC,QAAkBC,OAAO,GACzFxB,EAAmBE,EAAkBoB,MAAK,SAAAI,GAAG,OAAIA,EAAIvB,QAASc,KACpE,MAAO,CACHlC,YAAa4C,KAAKC,MAAMd,EAAKM,WAAW,GAAGC,WAAWC,MAAK,SAAChC,GAAD,MAAgB,MAATA,EAAEiC,QAAYC,OAAO,IACvF/B,SAAUqB,EAAKM,WAAW,GAAGC,WAAWC,MAAK,SAAChC,GAAD,MAAgB,MAATA,EAAEiC,QAAYC,OAAO,GACzEvB,cAAeA,EAAcM,YAC7BP,iBAAiBA,EAAiBI,QAClCL,YAAaiB,EAAehB,EAAiBG,QAIvD,OAxFE0B,qBAAU,WACN,IAAMC,EAAS,uCAAG,sBAAAC,EAAA,6DACdC,UAAUC,YAAYC,oBAAmB,SAASC,GAC9CxB,EAAOwB,EAASC,UAChBvB,EAAQsB,EAASE,cAHP,SAMRC,MAAM,sHACPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEF,GADA3B,EAAQ2B,GACJC,OAAOC,QAAQF,GAAQG,OAEvB,OADmB3B,EAAewB,MAXhC,2CAAH,qDAiBfZ,MAID,CAACpB,EAAIE,EAAME,IAmEZ,sBAAKgC,UAAU,MAAM5E,MAAO,CAAE6E,gBAAgB,OAAD,OAASC,EAAT,MAA7C,UACI,iDACkC,oBAArBlC,EAAKmC,aACV,cAAC,EAAD,CAASjF,YAAakD,EAAeJ,KAErC,wBAER,0EChJV,IAYeoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.29c19086.chunk.js","sourcesContent":["import React from 'react';\n//import './styles.css';\nimport moment from 'moment';\nimport {Card, CardContent, Typography, Grid, Box} from \"@material-ui/core\";\nimport {WiRaindrops} from \"weather-icons-react\";\n\n\n// Explore material ui theme: https://mui.com/customization/color/\n// Using the sx property: https://blog.devgenius.io/how-to-use-the-sx-prop-in-mui-v5-4ccfd588836\n\nconst cardStyle = {\n    display: 'block',\n    transitionDuration: '0.3s',\n    borderRadius: 20,\n    backgroundColor: \"#abd2e4\",\n    opacity: '0.85',\n}\n\n\nconst WeatherCard = ({weatherData}) => (\n\n    <Card style={cardStyle}>\n        <CardContent>\n            <Grid container direction=\"row\" sx={{justifyContent: {xs: 'center', md: 'space-between'}}}>\n                <Grid item >\n                    <Typography variant=\"h4\" component=\"h2\">\n                    Uppsala\n                    </Typography>\n                    <Typography variant=\"h3\" component=\"h2\">\n                        {weatherData.temperature} &deg;C\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\" style={{paddingTop:80}}>\n                        <Box s={{\n                            fontSize: 'h6.fontSize',\n                            m: 1,\n                            fontStyle: 'italic',\n                            p:1\n                        }}>\n                            <div style={{ display: 'flex',\n                                alignItems: 'center',\n                                flexWrap: 'wrap'}}>\n                                <span>Humidity { weatherData.humidity } %</span>\n                                <WiRaindrops style={{fill: '#4682B4', paddingBottom:0}} size={50} />\n                            </div>\n                        </Box>\n                    </Typography>\n                </Grid>\n                <Grid item sx={{justifyContent: {xs: 'center', md: 'right'}}} >\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {moment().format('dddd')}, {moment().format('LL')}\n                    </Typography>\n                    <Typography>\n                        { weatherData.weatherIcon }\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\" >\n                        { weatherData.weatherSituation }\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\" >\n                        { weatherData.precipitation }\n                    </Typography>\n                </Grid>\n            </Grid>\n        </CardContent>\n    </Card>\n)\n\nexport default WeatherCard;","const weatherSituations = [\n{value: 1, meaning:\"\tClear sky\"},\n{value: 2, meaning:\"\tNearly clear sky\"},\n{value: 3, meaning:\"\tVariable cloudiness\"},\n{value: 4, meaning:\"\tHalfclear sky\"},\n{value: 5, meaning:\"\tCloudy sky\"},\n{value: 6, meaning:\"\tOvercast\"},\n{value: 7, meaning:\"\tFog\"},\n{value: 8, meaning:\"\tLight rain showers\"},\n{value: 9, meaning:\"\tModerate rain showers\"},\n{value: 10, meaning:\t\"Heavy rain showers\"},\n{value: 11, meaning:\t\"Thunderstorm\"},\n{value: 12, meaning:\t\"Light sleet showers\"},\n{value: 13, meaning:\t\"Moderate sleet showers\"},\n{value: 14, meaning:\t\"Heavy sleet showers\"},\n{value: 15, meaning:\t\"Light snow showers\"},\n{value: 16, meaning:\t\"Moderate snow showers\"},\n{value: 17, meaning:\t\"Heavy snow showers\"},\n{value: 18, meaning:\t\"Light rain\"},\n{value: 19, meaning:\t\"Moderate rain\"},\n{value: 20, meaning:\t\"Heavy rain\"},\n{value: 21, meaning:\t\"Thunder\"},\n{value: 22, meaning:\t\"Light sleet\"},\n{value: 23, meaning:\t\"Moderate sleet\"},\n{value: 24, meaning:\t\"Heavy sleet\"},\n{value: 25, meaning:\t\"Light snowfall\"},\n{value: 26, meaning:\t\"Moderate snowfall\"},\n{value: 27, meaning:\t\"Heavy snowfall\"}\n]\n\nexport function getWeatherSituations(){\n    return weatherSituations;\n}","export default __webpack_public_path__ + \"static/media/ian-dooley-balloons-unsplash.cf538fb3.jpg\";","import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport Weather from './components/weather';\nimport {getWeatherSituations} from \"./components/weatherSituations\";\nimport background from \"./img/ian-dooley-balloons-unsplash.jpg\";\n\nimport {\n    WiDaySunny,\n    WiDaySunnyOvercast,\n    WiNightClear,\n    WiCloud,\n    WiSleet,\n    WiThunderstorm,\n    WiShowers,\n    WiRain,\n    WiFog,\n    WiCloudy,\n    WiDayCloudyHigh, WiSnowWind, WiSnow\n} from \"weather-icons-react\";\n\n/**\n * Written by Katarina Lejonlid\n * guided from https://www.freecodecamp.org/news/learn-react-by-building-a-weather-app/\n * API documentation for SMHI http://opendata.smhi.se/apidocs/metfcst/index.html\n * Photo by <a href=\"https://unsplash.com/@sadswim?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">ian dooley</a> on \n * <a href=\"https://unsplash.com/s/photos/sky-background-landscape?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n */\n\nconst precipitationCats = [\n    {level: 0, description: \"No precipitation\"},\n    {level: 1, description: \"Snow\"},\n    {level: 2, description: \"Snow and rain\"},\n    {level: 3, description: \"Rain\"},\n    {level: 4, description: \"Drizzle\"},\n    {level: 5, description: \"Freezing rain\"},\n    {level: 6, description: \"Freezing drizzle\"},\n]\n\nconst weatherSituations = getWeatherSituations()\n\n\n\nexport default function App() {\n\n    const [lat, setLat] = useState([]);\n    const [long, setLong] = useState([]);\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            navigator.geolocation.getCurrentPosition(function(position) {\n                setLat(position.latitude);\n                setLong(position.longitude);\n            });\n            //It should be possible to have ${long} and ${lat} in the url but can't get it to work :S\n            await fetch(`https://opendata-download-metfcst.smhi.se/api/category/pmp3g/version/2/geotype/point/lon/17.64/lat/59.86/data.json`)\n                .then(res => res.json())\n                .then(result => {\n                    setData(result)\n                    if (Object.entries(result).length) {\n                        const mappedData = mapWeatherData(result)\n                        return mappedData\n\n                    }\n                });\n        }\n        fetchData();\n        //console.log(\"Latitude is:\", lat)\n        //console.log(\"Longitude is:\", long)\n        //console.log(\"vad är \" + JSON.stringify(data))\n    }, [lat,long, data])\n\n    function getWeatherIcon(weatherSituationVal) {\n\n        switch (weatherSituationVal) {\n            case 1:\n                return <WiDaySunny style={{fill: '#f0e68c' }} size={150}/>\n            case 2:\n                return <WiDaySunnyOvercast style={{fill: '#f0e68c'}} size={150}/>\n            case 3:\n                return <WiDayCloudyHigh style={{fill: '#F0F8FF'}} size={150}/>\n            case 4:\n                return <WiNightClear style={{fill: '#696969'}} size={150}/>\n            case 5:\n                return <WiCloud style={{fill: '#F0F8FF'}} size={150}/>\n            case 6:\n                return <WiCloudy style={{fill: '#F0F8FF'}} size={150}/>\n            case 7:\n                return <WiFog style={{fill: '#696969'}} size={150}/>\n            case 8:\n            case 9:\n                return <WiShowers style={{fill: '#4682B4'}} size={150}/>\n            case 10:\n                return <WiRain style={{fill: '#4682B4'}} size={150}/>\n            case 11:\n                return <WiThunderstorm style={{fill: '#696969'}} size={150}/>\n            case 12:\n            case 13:\n            case 14:\n                return <WiSleet style={{fill: '#F0F8FF'}} size={150}/>\n            case 15:\n            case 16:\n            case 17:\n                return <WiSnowWind style={{fill: '#F0F8FF'}} size={150}/>\n            case 18:\n                return <WiShowers style={{fill: '#F0F8FF'}} size={150}/>\n            case 19:\n            case 20:\n                return <WiRain style={{fill: '#4682B4'}} size={150}/>\n            case 21:\n                return <WiThunderstorm style={{fill: '#696969'}} size={150}/>\n            case 22:\n            case 23:\n            case 24:\n                return <WiSleet style={{fill: '#F0F8FF'}} size={150}/>\n            case 25:\n            case 26:\n            case 27:\n                return <WiSnow style={{fill: '#F0F8FF'}} size={150}/>\n        }\n    }\n\n    function mapWeatherData(data) {\n        let precipitationLevel = data.timeSeries[0].parameters.find((p) => p.name==='pcat').values[0]\n        const precipitation = precipitationCats.find(pre => pre.level === precipitationLevel)\n        let weatherSituationVal = data.timeSeries[0].parameters.find((p) => p.name ==='Wsymb2').values[0]\n        const weatherSituation = weatherSituations.find(wea => wea.value ===weatherSituationVal)\n        return {\n            temperature: Math.round(data.timeSeries[0].parameters.find((p) => p.name==='t').values[0]),\n            humidity: data.timeSeries[0].parameters.find((p) => p.name==='r').values[0],\n            precipitation: precipitation.description,\n            weatherSituation:weatherSituation.meaning,\n            weatherIcon: getWeatherIcon(weatherSituation.value)\n        };\n    }\n\n  return (\n      <div className=\"App\" style={{ backgroundImage: `url(${background})`}}>\n          <h1>Today's Weather</h1>\n              {(typeof data.approvedTime != 'undefined') ? (\n                  <Weather weatherData={mapWeatherData(data)}/>\n              ) : (\n                  <div></div>\n              )}\n          <footer>\n              Page created by Katarina Lejonlid\n          </footer>\n      </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"typeface-roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}